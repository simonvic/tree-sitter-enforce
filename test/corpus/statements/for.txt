================================================================================
for true do statement
================================================================================
void foo() {
	for (;true;) a;
}
--------------------------------------------------------------------------------
(compilation_unit (decl_method return_type: (type_void) name: (identifier) body: (block
	(for
		init: (empty_statement)
		condition: (literal_bool)
		body: (statement_expression (identifier))))))

================================================================================
for true do block
================================================================================
void foo() {
	for (;true;) {}
}
--------------------------------------------------------------------------------
(compilation_unit (decl_method return_type: (type_void) name: (identifier) body: (block
	(for
		init: (empty_statement)
		condition: (literal_bool)
		body: (block)))))

================================================================================
for
================================================================================
void foo() {
	for (int i = 0; i < 69; i++) {}
	for (i = 0; i < 69; i++) {}
}
--------------------------------------------------------------------------------
(compilation_unit (decl_method return_type: (type_void) name: (identifier) body: (block
	(for
		init: (decl_variable
			type: (type_int)
			name: (identifier)
			init: (literal_int))
		condition: (expression_binary
			lhs: (identifier)
			rhs: (literal_int))
		update: (expression_suffix (identifier))
		body: (block))
	(for
		init: (statement_expression
            (assignment
                lhs: (identifier)
                rhs: (literal_int)))
		condition: (expression_binary
			lhs: (identifier)
			rhs: (literal_int))
		update: (expression_suffix (identifier))
		body: (block)))))
================================================================================
for with assignment
================================================================================
void foo() {
	for (int i = 0; i < 69; i += 1) {}
}
--------------------------------------------------------------------------------

(compilation_unit
  (decl_method
    return_type: (type_void)
    name: (identifier)
    body: (block
      (for
        init: (decl_variable
          type: (type_int)
          name: (identifier)
          init: (literal_int))
        condition: (expression_binary
          lhs: (identifier)
          rhs: (literal_int))
        update: (assignment
          lhs: (identifier)
          rhs: (literal_int))
        body: (block)))))
