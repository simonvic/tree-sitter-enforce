================================================================================
attributes
================================================================================
[Foo()]
class Foo {

	[Foo()]
	int foo;

	[Foo()]
	void foo() {}
}

[Foo()]
enum Foo { }
--------------------------------------------------------------------------------
(compilation_unit
	(decl_class
		(attribute_list (invokation invoked: (identifier) (actual_parameters)))
		typename: (identifier)
		body: (class_body
			(decl_field
				(attribute_list (invokation invoked: (identifier) (actual_parameters)))
				type: (type_int)
				name: (identifier))
			(decl_method
				(attribute_list (invokation invoked: (identifier) (actual_parameters)))
				return_type: (type_void)
				name: (identifier)
				body: (block))))
	(decl_enum
		(attribute_list (invokation invoked: (identifier) (actual_parameters)))
		typename: (identifier)
		body: (enum_body)))

================================================================================
multiple attributes
================================================================================
[Foo(), Bar()]
class Foo { }
--------------------------------------------------------------------------------
(compilation_unit
	(decl_class
		(attribute_list
			(invokation (identifier) (actual_parameters))
			(invokation (identifier) (actual_parameters)))
		(identifier)
		(class_body)))

================================================================================
attribute with parameters
================================================================================
[Foo("foo", true, 69, Bar("bar", {1, 2, 3}, Baz()))]
class Foo { }
--------------------------------------------------------------------------------
(compilation_unit
	(decl_class
		(attribute_list
			(invokation
				(identifier)
				(actual_parameters
					(actual_parameter (literal_string))
					(actual_parameter (literal_bool))
					(actual_parameter (literal_int)) 
					(actual_parameter (invokation
						(identifier)
						(actual_parameters
							(actual_parameter (literal_string))
							(actual_parameter (array_creation
								(literal_int)
								(literal_int)
								(literal_int)))
							(actual_parameter (invokation (identifier) (actual_parameters)))))))))
		(identifier) (class_body)))
